package GUIs;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JTextArea;
import javax.swing.event.ListSelectionEvent;

import ADAPTER.RendererListCellContact;
import CONSTANTs.ConfigConstant;
import CONTROLLERs.ControlMainUI;
import CONTROLLERs.ListenerPackages;
import CONTROLLERs.PubSub;
import MODELs.PackageData;
import MODELs.User;
import UTILs.Utility;

/**
*
* @author HuynhSang
*/
@SuppressWarnings("serial")
public class MainApp extends javax.swing.JFrame implements ControlMainUI{

	DefaultListModel<User> dm = new DefaultListModel<User>();
	User owner, client;
	ArrayList<User> userList;
	PubSub pubsub;
	private String broker;
	
	ListenerPackages listenerPackages;
   /**
    * Creates new form ABC
    */
   public MainApp(User owner, ArrayList<User> userList, String broker) {
	   this.owner = owner;
	   this.userList = userList;
	   this.broker = broker;
	   this.client = userList.get(owner.getId());
       initComponents();
       init();
   }
   
   private void init(){
	   pubsub = new PubSub(broker, owner.getUserName() + owner.getId());
	   pubsub.subscribe(ConfigConstant.liveStreamNotice, 0);
	   pubsub.subscribe(ConfigConstant.prefixNotice + owner.getId(), 0);
	   pubsub.subscribe(ConfigConstant.prefixTopic + "chat"  +owner.getId(), 0);
	   
	   listenerPackages = new ListenerPackages(pubsub, userList, owner, this);
	   pubsub.on(listenerPackages);
	   dm.clear();
	   for(User user : userList){
		   if(user.getId() != owner.getId()){
			   dm.addElement(user);
		   }
	   }
	   listContacts.setCellRenderer(new RendererListCellContact());
	   listContacts.setModel(dm);
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   private void initComponents() {

       jPanel10 = new javax.swing.JPanel();
       jScrollPane4 = new javax.swing.JScrollPane();
       jTextArea2 = new javax.swing.JTextArea();
       jPanel1 = new javax.swing.JPanel();
       jPanel2 = new javax.swing.JPanel();
       jPanel4 = new javax.swing.JPanel();
       jPanel5 = new javax.swing.JPanel();
       lblAvatar = new javax.swing.JLabel();
       lblUserName = new javax.swing.JLabel();
       lblStatus = new javax.swing.JLabel();
       jSeparator1 = new javax.swing.JSeparator();
       jPanel6 = new javax.swing.JPanel();
       lblLiveStream = new javax.swing.JLabel();
       jLabel1 = new javax.swing.JLabel();
       jScrollPane1 = new javax.swing.JScrollPane();
       listContacts = new javax.swing.JList<User>();
       jPanel3 = new javax.swing.JPanel();
       jPanel7 = new javax.swing.JPanel();
       jScrollPane2 = new javax.swing.JScrollPane();
       listNotifications = new javax.swing.JList<User>();
       jPanel8 = new javax.swing.JPanel();
       jPanel9 = new javax.swing.JPanel();
       lblClientAvatar = new javax.swing.JLabel();
       lblClientName = new javax.swing.JLabel();
       lblClientStatus = new javax.swing.JLabel();
       lblCall = new javax.swing.JLabel();
       jPanel11 = new javax.swing.JPanel();
       jScrollPane3 = new javax.swing.JScrollPane();
       txtAreaChatbox = new javax.swing.JTextArea();
       jScrollPane5 = new javax.swing.JScrollPane();
       txtAreaInput = new javax.swing.JTextArea();
       btnSend = new javax.swing.JButton();
       jMenuBar1 = new javax.swing.JMenuBar();
       jMenuFile = new javax.swing.JMenu();
       jMenuItemClose = new javax.swing.JMenuItem();
       jMenuEdit = new javax.swing.JMenu();

       Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
       setLocation((int) (dimension.getWidth()/2) - 400,(int) (dimension.getHeight()/2) - 300);

       jPanel10.setPreferredSize(new java.awt.Dimension(558, 50));

       javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
       jPanel10.setLayout(jPanel10Layout);
       jPanel10Layout.setHorizontalGroup(
           jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGap(0, 558, Short.MAX_VALUE)
       );
       jPanel10Layout.setVerticalGroup(
           jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGap(0, 50, Short.MAX_VALUE)
       );

       jTextArea2.setColumns(20);
       jTextArea2.setRows(5);
       jTextArea2.setPreferredSize(new java.awt.Dimension(164, 20));
       jScrollPane4.setViewportView(jTextArea2);

       setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

       jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
       jPanel1.setLayout(new java.awt.BorderLayout());

       jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
       jPanel2.setPreferredSize(new java.awt.Dimension(250, 579));
       jPanel2.setLayout(new java.awt.BorderLayout());

       jPanel4.setPreferredSize(new java.awt.Dimension(246, 200));
       jPanel4.setLayout(new java.awt.BorderLayout());

       jPanel5.setPreferredSize(new java.awt.Dimension(136, 100));
       
       lblAvatar.setIcon(new ImageIcon(getClass().getResource(owner.getAvatarPath())));

       lblUserName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
       lblUserName.setText(owner.getUserName());

       if(owner.isStatus()){
    	   lblStatus.setText("Online");
    	   lblStatus.setForeground(Color.green);
       }else{
    	   lblStatus.setText("Offline");
    	   lblStatus.setForeground(Color.red);
       }

       javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
       jPanel5.setLayout(jPanel5Layout);
       jPanel5Layout.setHorizontalGroup(
           jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel5Layout.createSequentialGroup()
               .addContainerGap()
               .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addComponent(jSeparator1)
                   .addGroup(jPanel5Layout.createSequentialGroup()
                       .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addGap(18, 18, 18)
                       .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(lblUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                           .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
               .addContainerGap())
       );
       jPanel5Layout.setVerticalGroup(
           jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel5Layout.createSequentialGroup()
               .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addGroup(jPanel5Layout.createSequentialGroup()
                       .addGap(19, 19, 19)
                       .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                   .addGroup(jPanel5Layout.createSequentialGroup()
                       .addGap(29, 29, 29)
                       .addComponent(lblUserName)
                       .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                       .addComponent(lblStatus)))
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
       );

       jPanel4.add(jPanel5, java.awt.BorderLayout.PAGE_START);

       lblLiveStream.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
       lblLiveStream.setIcon(new ImageIcon(getClass().getResource("/icon/newLiveStream.png")));
       lblLiveStream.addMouseListener(new java.awt.event.MouseAdapter() {
           public void mouseReleased(java.awt.event.MouseEvent evt) {
               lblLiveStreamMouseReleased(evt);
           }
       });

       jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
       jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
       jLabel1.setText("Contacts");

       javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
       jPanel6.setLayout(jPanel6Layout);
       jPanel6Layout.setHorizontalGroup(
           jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel6Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addContainerGap())
           .addGroup(jPanel6Layout.createSequentialGroup()
               .addGap(50, 50, 50)
               .addComponent(lblLiveStream, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addContainerGap(50, Short.MAX_VALUE))
       );
       jPanel6Layout.setVerticalGroup(
           jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel6Layout.createSequentialGroup()
               .addComponent(lblLiveStream, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
               .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
               .addContainerGap())
       );

       jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

       jPanel2.add(jPanel4, java.awt.BorderLayout.PAGE_START);

       listContacts.addListSelectionListener(new javax.swing.event.ListSelectionListener(){
		public void valueChanged(ListSelectionEvent evt) {
			listContactsSelectionListener(evt);
		}
       });
       jScrollPane1.setViewportView(listContacts);

       jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

       jPanel1.add(jPanel2, java.awt.BorderLayout.LINE_START);

       jPanel3.setLayout(new java.awt.BorderLayout());

       jPanel7.setPreferredSize(new java.awt.Dimension(558, 200));
       jPanel7.setLayout(new java.awt.BorderLayout());

       listNotifications.addMouseListener(new MouseAdapter() {
    	   public void mouseClicked(MouseEvent evt){
    		   listNotificationsClickedHandle(evt);
    	   }
       });
       jScrollPane2.setViewportView(listNotifications);

       jPanel7.add(jScrollPane2, java.awt.BorderLayout.CENTER);

       jPanel3.add(jPanel7, java.awt.BorderLayout.PAGE_START);

       jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
       jPanel8.setLayout(new java.awt.BorderLayout());

       jPanel9.setPreferredSize(new java.awt.Dimension(554, 80));

       lblClientAvatar.setIcon(new ImageIcon(getClass().getResource(client.getAvatarPath())));

       lblClientName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
       lblClientName.setText(client.getUserName());

       if(client.isStatus()){
    	   lblClientStatus.setText("Online");
    	   lblClientStatus.setForeground(Color.green);
       }else{
    	   lblClientStatus.setText("Offline");
    	   lblClientStatus.setForeground(Color.red);
       }

       lblCall.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
       lblCall.setIcon(new ImageIcon(getClass().getResource("/icon/call.png")));
       lblCall.addMouseListener(new java.awt.event.MouseAdapter() {
           public void mouseReleased(java.awt.event.MouseEvent evt) {
               lblCallMouseReleased(evt);
           }
       });

       javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
       jPanel9.setLayout(jPanel9Layout);
       jPanel9Layout.setHorizontalGroup(
           jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel9Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(lblClientAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
               .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                   .addComponent(lblClientName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                   .addComponent(lblClientStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
               .addComponent(lblCall, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGap(35, 35, 35))
       );
       jPanel9Layout.setVerticalGroup(
           jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel9Layout.createSequentialGroup()
               .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addGroup(jPanel9Layout.createSequentialGroup()
                       .addContainerGap()
                       .addComponent(lblClientAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                   .addGroup(jPanel9Layout.createSequentialGroup()
                       .addGap(20, 20, 20)
                       .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(lblCall, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addGroup(jPanel9Layout.createSequentialGroup()
                               .addComponent(lblClientName)
                               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                               .addComponent(lblClientStatus)))
                       .addGap(0, 9, Short.MAX_VALUE)))
               .addContainerGap())
       );

       jPanel8.add(jPanel9, java.awt.BorderLayout.PAGE_START);

       txtAreaChatbox.setEditable(false);
       txtAreaChatbox.setColumns(20);
       txtAreaChatbox.setLineWrap(true);
       txtAreaChatbox.setRows(5);
       jScrollPane3.setViewportView(txtAreaChatbox);

       jScrollPane5.setPreferredSize(new java.awt.Dimension(166, 50));

       txtAreaInput.setColumns(20);
       txtAreaInput.setRows(5);
       jScrollPane5.setViewportView(txtAreaInput);

       btnSend.setText("Send");
       btnSend.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               btnSendActionPerformed(evt);
           }
       });

       javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
       jPanel11.setLayout(jPanel11Layout);
       jPanel11Layout.setHorizontalGroup(
           jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addComponent(jScrollPane3)
           .addGroup(jPanel11Layout.createSequentialGroup()
               .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 475, Short.MAX_VALUE)
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
               .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addContainerGap())
       );
       jPanel11Layout.setVerticalGroup(
           jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel11Layout.createSequentialGroup()
               .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, Short.MAX_VALUE)
               //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                   .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                   .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
               .addContainerGap())
       );

       jPanel8.add(jPanel11, java.awt.BorderLayout.CENTER);

       jPanel3.add(jPanel8, java.awt.BorderLayout.CENTER);

       jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

       jMenuFile.setText("File");

       jMenuItemClose.setText("Close");
       jMenuItemClose.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               jMenuItemCloseActionPerformed(evt);
           }
       });
       jMenuFile.add(jMenuItemClose);

       jMenuBar1.add(jMenuFile);

       jMenuEdit.setText("Edit");
       jMenuBar1.add(jMenuEdit);

       setJMenuBar(jMenuBar1);

       javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
       getContentPane().setLayout(layout);
       layout.setHorizontalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
       );
       layout.setVerticalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
       );
       
       this.addWindowListener(new WindowAdapter(){

			@Override
			public void windowClosed(WindowEvent e) {
				// TODO Auto-generated method stub
				super.windowClosed(e);
			}

			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
				super.windowClosing(e);
				handleCloseWindow(e);
			}
       	
		});

       pack();
   }// </editor-fold>                        

   private void jMenuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {                                               
       // TODO add your handling code here:
   }                                              

   private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {                                        
       String str = owner.getUserName() + ": "+txtAreaInput.getText() + "\n";
       PackageData data = new PackageData("chat", str, " ", 0, owner.getId()+"");
       txtAreaInput.setText("");
       listenerPackages.addMsgToChatBox(str, client.getId());
       txtAreaChatbox.setText(listenerPackages.getMsgFromChatBox(client.getId()).toString());
       Utility.sendMsg(pubsub, Utility.constructJSON(data).getBytes(), ConfigConstant.prefixTopic + "chat" + client.getId(), 0);
   }                                       

   private void lblCallMouseReleased(java.awt.event.MouseEvent evt) {                                      
       // TODO add your handling code here:
	   LiveStream callStream = new LiveStream(pubsub, owner, client.getId());
	   callStream.setVisible(true);
	   callStream.showWaitDialog();
	   listenerPackages.setControlCallStream(callStream);
	   PackageData data = new PackageData("notice", "request call", " ", 0, owner.getId() + "");
	   Utility.sendMsg(pubsub, Utility.constructJSON(data).getBytes(), ConfigConstant.prefixNotice + client.getId(), 0);
   }                                     

   private void lblLiveStreamMouseReleased(java.awt.event.MouseEvent evt) {                                            
       // TODO add your handling code here:
	   PackageData data = new PackageData("notice", "on", " ", 0, owner.getId() + "");
	   Utility.sendMsg(pubsub, Utility.constructJSON(data).getBytes(), ConfigConstant.liveStreamNotice, 0);
	   LiveStream saliStream = new LiveStream(pubsub, owner, owner.getId());
	   saliStream.setVisible(true);
	   saliStream.initLiveStreamDevice(ConfigConstant.prefixLiveStream + "video" +owner.getId(), "SaliStream");
	   pubsub.subscribe(ConfigConstant.prefixLiveStream + "chat" +owner.getId(), 0);
	   listenerPackages.setControlSaliStream(saliStream);
	   listenerPackages.initTxtAreaSaliStream();
   }
   
   private void listContactsSelectionListener(javax.swing.event.ListSelectionEvent evt){	  
       boolean adjust = evt.getValueIsAdjusting();
       if(!adjust){  
    	   changeClient((User) listContacts.getSelectedValue());
       }
   }
   
   private void handleCloseWindow(WindowEvent e){
   	int res = javax.swing.JOptionPane.showConfirmDialog(MainApp.this, "Are you sure you want to close?", "Close?", javax.swing.JOptionPane.YES_NO_OPTION);
   	if ( res == 0 ) {
           // dispose method issues the WINDOW_CLOSED event
   		pubsub.disconnect();
       	MainApp.this.dispose();
       	/*Set<Thread> threadSet = Thread.getAllStackTraces().keySet();
       	Thread[] threadArray = threadSet.toArray(new Thread[threadSet.size()]);*/
       	System.exit(0);
       	
       }
   }
   
   private void listNotificationsClickedHandle(MouseEvent e){
	   if(e.getClickCount() == 2){
		   User user = (User) listNotifications.getSelectedValue();
		   if(user != null && user.getId() != owner.getId()){
			   pubsub.subscribe(ConfigConstant.prefixLiveStream + "video" + user.getId(), 0);
			   pubsub.subscribe(ConfigConstant.prefixLiveStream + "chat" + user.getId(), 0);
			   LiveStream watchStream = new LiveStream(pubsub, owner, user.getId());
			   watchStream.setVisible(true);
			   watchStream.setType("watching");
			   listenerPackages.setControlSaliStream(watchStream);
			   listenerPackages.initTxtAreaSaliStream();
		   }
	   }
   }
   

   // Variables declaration - do not modify                     
   private javax.swing.JButton btnSend;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JMenuBar jMenuBar1;
   private javax.swing.JMenu jMenuEdit;
   private javax.swing.JMenu jMenuFile;
   private javax.swing.JMenuItem jMenuItemClose;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel10;
   private javax.swing.JPanel jPanel11;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel3;
   private javax.swing.JPanel jPanel4;
   private javax.swing.JPanel jPanel5;
   private javax.swing.JPanel jPanel6;
   private javax.swing.JPanel jPanel7;
   private javax.swing.JPanel jPanel8;
   private javax.swing.JPanel jPanel9;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JScrollPane jScrollPane4;
   private javax.swing.JScrollPane jScrollPane5;
   private javax.swing.JSeparator jSeparator1;
   private javax.swing.JTextArea jTextArea2;
   private javax.swing.JLabel lblAvatar;
   private javax.swing.JLabel lblCall;
   private javax.swing.JLabel lblClientAvatar;
   private javax.swing.JLabel lblClientName;
   private javax.swing.JLabel lblClientStatus;
   private javax.swing.JLabel lblLiveStream;
   private javax.swing.JLabel lblStatus;
   private javax.swing.JLabel lblUserName;
   private javax.swing.JList<User> listNotifications;
   private javax.swing.JList<User> listContacts;
   private volatile javax.swing.JTextArea txtAreaChatbox;
   private javax.swing.JTextArea txtAreaInput;
   // End of variables declaration                   
	@Override
	public JLabel getBtnLiveStream() {
		// TODO Auto-generated method stub
		return this.lblLiveStream;
	}
	
	@Override
	public JLabel getBtnCallClient() {
		// TODO Auto-generated method stub
		return this.lblCall;
	}
	
	@Override
	public JList<User> getListNotifications() {
		// TODO Auto-generated method stub
		return this.listNotifications;
	}
	
	@Override
	public JTextArea getTxtAreaChatbox() {
		// TODO Auto-generated method stub
		return this.txtAreaChatbox;
	}
	
	@Override
	public void showDialogCall(User client) {
		ConfirmCallDialog noticeDialog = new ConfirmCallDialog(pubsub, owner, client.getId(), listenerPackages);
		noticeDialog.setVisible(true);
	}
	
	@Override
	public void changeClient(User guest){
		client = guest;
		lblClientAvatar.setIcon(new ImageIcon(getClass().getResource(guest.getAvatarPath())));
		lblClientName.setText(guest.getUserName());
		if(guest.isStatus()){
			lblClientStatus.setText("Online");
			lblClientStatus.setForeground(Color.green);
		}else{
			lblClientStatus.setText("Offline");
			lblClientStatus.setForeground(Color.red);
		}
		txtAreaChatbox.setText(listenerPackages.getMsgFromChatBox(guest.getId()).toString());
	}
		
}
